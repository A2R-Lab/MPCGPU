#include <admm_outer.cuh>
#include <limits>

using namespace std;

int main(){
	/*
	H = np.array([[6, 2, 1], [2, 5, 2], [1, 2, 4]])
	g = np.array([[-8], [-3], [-3]])
	A = np.array([[1, 0, 1], [0, 1, 1], [1, 0, 0], [0, 1, 0], [0, 0, 1]])
	l = np.array([[3], [0], [-10], [-10], [-10]])
	u = np.array([[3], [0], [np.inf], [np.inf], [np.inf]])
	*/
	// int nx = 2;
	// int nc = 1;
	// int knot_points = 3;
	int n = 30;
	float H[n*n] = {0.01, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001};
	float g[n] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
	float A[n*n] = {0.005000000000000001, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -1.0, 0.1, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005000000000000001, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -1.0, 0.1, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005000000000000001, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -1.0, 0.1, 1.0, 0.0};
	float l[n] = {-0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
	float u[n] ={-0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};

	float x[n];
	float z[n];
	float lambda[n];

	for(int i=0; i<n;i++){
		x[i] = 0.0;
		z[i] = 0.0;
		lambda[i] = 0.0;
	}
	float rho = 1e-1;

	float sigma = 1e-6;
	float tol=1e-3;
	int max_iter = 4000;
	int update_rho = 0;

	admm_solve_outer(H, g, A, l, u, x, lambda, z, rho, sigma, tol, max_iter, update_rho);
	
	std::cout << "x: ";
	for(int i=0; i<n; i++){
		std::cout << x[i] << " ";
	}
	std::cout << "\n\n";
	std::cout << "lambda: ";
	for(int i=0; i<n; i++){
		std::cout << lambda[i] << " ";
	}

	std::cout << "\n\n";
	std::cout << "z: ";
	for(int i=0; i<n; i++){
		std::cout << z[i] << " ";
	}

	std::cout << "\n\n";

}